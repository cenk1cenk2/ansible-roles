---
- name: 'create temporary download directory: {{ github_latest_release_repo }}'
  tempfile:
    state: directory
  register: temp

- name: 'create temporary unarchive directory: {{ github_latest_release_repo }}'
  tempfile:
    state: directory
  register: temp_unarchive
  when:
    - github_latest_release_archive is defined
    - github_latest_release_archive

- name: 'fetch: {{ github_latest_release_repo }}'
  get_url:
    url: https://github.com/{{ github_latest_release_repo }}/releases/download/{{ json_response.json.tag_name }}/{{ github_latest_release_repo_filename }}{{ github_latest_release_archive | default("") }}
    dest: '{{ temp.path }}'
  register: download

- name: 'unarchive: {{ github_latest_release_repo }}'
  unarchive:
    src: '{{ download.dest }}'
    dest: '{{ temp_unarchive.path }}'
    remote_src: true
  when:
    - github_latest_release_archive is defined
    - github_latest_release_archive

- name: 'set download directory: {{ github_latest_release_repo }}'
  set_fact:
    github_latest_release_repo_download_directory: '{{ temp_unarchive.path if temp_unarchive.path is defined else temp.path }}'

- name: 'copy from release: {{ github_latest_release_repo }}'
  become: true
  become_user: root
  copy:
    src: '{{ github_latest_release_repo_download_directory }}/{{ item.src }}'
    dest: '{{ github_latest_release_dest }}/{{ item.dest | default(item.src) }}'
    mode: '{{ github_latest_release_mode }}'
    force: '{{ github_latest_release_force | bool }}'
    remote_src: true
  async: 300
  poll: 5
  with_items: '{{ github_latest_release_artifacts | default([{"src": github_latest_release_repo_filename, "dest": github_latest_release_repo_filename}]) }}'
