---
- name: create link folders
  ansible.builtin.file:
    path: |-
      {%- set path = podman_quadlet_systemd_link.path -%}
      {%- if podman_quadlet_systemd_scope == 'system' -%}
        {{- ["/etc/systemd/system/", path | relpath("/")] | path_join | dirname -}}
      {%- else -%}
        {{- [ansible_env.HOME, ".config/systemd/user/", path | relpath(ansible_env.HOME)] | path_join | dirname -}}
      {%- endif -%}
    state: directory
  with_items: '{{ podman_quadlet_systemd_links }}'
  loop_control:
    loop_var: podman_quadlet_systemd_link

- name: link container systemd services
  ansible.builtin.file:
    src: '{{ podman_quadlet_systemd_link.path }}'
    dest: |-
      {%- set path = podman_quadlet_systemd_link.path -%}
      {%- if podman_quadlet_systemd_scope == 'system' -%}
        {{- ["/etc/containers/systemd/", path | relpath("/")] | path_join -}}
      {%- else -%}
        {{- [ansible_env.HOME, ".config/containers/systemd/", path | relpath(ansible_env.HOME)] | path_join -}}
      {%- endif -%}
    state: link
    follow: true
  with_items: '{{ podman_quadlet_systemd_links }}'
  loop_control:
    loop_var: podman_quadlet_systemd_link

- name: daemon reload
  ansible.builtin.systemd:
    daemon_reload: true

- name: set systemd service state
  ansible.builtin.systemd:
    name: '{{ podman_quadlet_systemd_service.name }}'
    state: |-
      {%- if podman_quadlet_systemd_service.state | default(podman_quadlet_systemd_state) == 'reloaded' -%}
        {%- if podman_quadlet_systemd_triggers is not defined -%}
        restarted
        {%- else -%}
        {{- "restarted" if True in podman_quadlet_systemd_triggers else "started" -}}
        {%- endif -%}
      {%- else -%}
        {{- podman_quadlet_systemd_service.state | default(podman_quadlet_systemd_services_state) -}}
      {%- endif -%}
    scope: '{{ podman_quadlet_systemd_service.scope | default(podman_quadlet_systemd_scope) }}'
  with_items: '{{ podman_quadlet_systemd_services }}'
  loop_control:
    loop_var: podman_quadlet_systemd_service
