{% if openresty_enable_oauth %}
access_by_lua_block {
  local opts = {
     redirect_uri_path = "/redirect_uri",

     discovery = "{{ openresty_oauth_discovery_url }}",
     client_id = "{{ openresty_oauth_client_id }}",
     client_secret = "{{ openresty_oauth_client_secret }}",

     scope = "openid email profile",
     logout_path = "/logout",
     redirect_after_logout_uri = "/",
     ssl_verify = "no",
     -- Where should the user be redirected after logout from the RP. This option overides any end_session_endpoint that the OP may have provided in the discovery response.

     renew_access_token_on_expiry = true,
     -- whether this plugin shall try to silently renew the access token once it is expired if a refresh token is available.
     -- if it fails to renew the token, the user will be redirected to the authorization endpoint.

     session_contents = {id_token=true, user=true, access_token=true},
     -- Whitelist of session content to enable. This can be used to reduce the session size.
     -- When not set everything will be included in the session.
     -- Available are:
     -- id_token, enc_id_token, user, access_token (includes refresh token)

     revoke_tokens_on_logout = true,
  }

  -- call authenticate for OpenID Connect user authentication
  local res, err = require("resty.openidc").authenticate(opts)

  if err then
    ngx.status = 403
    ngx.say(err)
    ngx.exit(ngx.HTTP_FORBIDDEN)
  end

  ngx.req.set_header("X-USER", res.id_token.sub)
}

{% endif %}
