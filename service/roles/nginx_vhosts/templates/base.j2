#jinja2:trim_blocks: True,lstrip_blocks: True
# ansible generated config file

worker_processes {{ ansible_processor_vcpus | default(ansible_processor_count) }};
worker_rlimit_nofile 100000;
{% if vhost_modules is defined %}

{% for m in vhost_modules %}
# load external modules and directives
load_module {{ m }};
{% endfor %}
{% endif %}

{% if vhost_openresty %}
# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

{% endif %}
events {
  worker_connections 1024;
  use epoll;
  multi_accept on;
}

http {
  # cache informations about FDs, frequently accessed files
  # can boost performance, but you need to test those values
  open_file_cache max=200000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  # to boost I/O on HDD we can disable access logs
  access_log {{ vhost_main_access_logs }};
  error_log {{ vhost_main_error_logs }};

  client_max_body_size {{ vhost_max_body_size }};

  {% filter indent(2, True) %}{% include './gzip.j2' %}{% endfilter %}

  # send headers in one piece, it is better than sending them one by one
  tcp_nopush on;

  # don't buffer data sent, good for small data bursts in real time
  tcp_nodelay on;

  include                             mime.types;
  default_type                        {{ vhost_default_mime_type }};
  keepalive_timeout                   {{ vhost_keepalive_timeout }};
  sendfile                            on;
  reset_timedout_connection           on;

  {% if vhost_real_ip_from is defined and vhost_real_ip_from | length > 0 %}
  # for combination with haproxy
  real_ip_header proxy_protocol;
  real_ip_recursive on;
  {% for real_ip in vhost_real_ip_from %}
  set_real_ip_from {{ real_ip }};
  {% endfor %}
  {% endif %}

  {% if vhost_proxy_locations is defined and vhost_proxy_cache_enable %}
  proxy_cache_path {{ vhost_proxy_cache_path }} levels=1:2 keys_zone={{ vhost_base_domain }}:{{ vhost_proxy_keys_zone_size }} max_size={{ vhost_proxy_cache_max_size }} inactive={{ vhost_proxy_cache_inactive_timeout }};

  {% endif %}
  proxy_buffers {{ vhost_proxy_buffer_count }} {{ vhost_proxy_response_buffer_size }};
  proxy_buffer_size {{ vhost_proxy_header_buffer_size }};
  proxy_busy_buffers_size {{ vhost_proxy_busy_buffer_size }};
  proxy_temp_file_write_size {{ vhost_proxy_temp_file_write_size }};
  large_client_header_buffers 4 32k;
  {% if vhost_non_ssl_networks_allow is defined and vhost_non_ssl_networks_allow != False %}

  {% filter indent(2, True) %}{% include './geolocation.j2' %}{% endfilter %}

  {% endif %}

  {% if vhost_http_custom is defined %}
  {% for c in vhost_http_custom %}
  {{ c }}
  {% endfor %}

  {% endif %}
  {% if vhost_openresty %}
  lua_package_path '~/lua/?.lua;;';

  # See Move default writable paths to a dedicated directory (#119)
  # https://github.com/openresty/docker-openresty/issues/119
  client_body_temp_path /var/run/openresty/nginx-client-body;
  proxy_temp_path       /var/run/openresty/nginx-proxy;
  fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
  uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
  scgi_temp_path        /var/run/openresty/nginx-scgi;

  server_tokens off;

  lua_shared_dict discovery 10m;
  lua_shared_dict jwks 10m;

  {% endif %}
  include ./{{ nginx_domains_dir }}/*.conf;
}
